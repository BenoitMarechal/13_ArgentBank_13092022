swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/transactions/:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Fetch Transaction(s).
      description: API for fetching user's every transaction from last month, or a particular one from its id.
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: query
          type: string
          name: id
          description: Optionnal Id for a particular transaction, otherwise returns all transactions from the past month.
          required: false
      produces:
        - application/json
      responses:
        '200':
          description: User transactions retrieved successfully
          schema:
            $ref: '#/definitions/AllTransactionsResponse'
        '400':
          description: User's transactions could not be found or returned, please check database connection and/or user's token (renew login)
        '500':
          description: Internal Server Error
    post:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Create a new transaction
      description: Creates and saves a new transaction. Transaction is given an id by API and returned.
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Complete transaction, but the id is empty
          required: true
          schema:
            $ref: '#/definitions/Transaction'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction created successfully
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Couldn't creat new transaction, please check database connection and/or user's token (renew login)
        '500':
          description: Internal Server Error
  /user/transactions/{id}:        
    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Single Transaction Modification API
      description: API for fetching user's particular transaction by id
      parameters:
        - in: path
          type: string
          name: id
          description: Id for a particular transaction
          required: true
         
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/EditTransactionBody'
      produces:
        - application/json
      responses:
        '200':
          description: User transaction retrieved successfully
          schema:
            $ref: '#/definitions/CreateTransactionResponse'
        '400':
          description: User's transaction could not be found or returned, please check database connection, user's token (renew login) or transaction's id
        '500':
          description: Internal Server Error              
    
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  Transaction:
    type: object
    properties:
      id:
        type: string
        description: transaction's id
      date:
        type: string
        description: transaction's date
      description:
        type: string
        description: Transaction's description
      amount:
        type: number
        description: Transaction's amount in dollars
      balance:
        type: number
        description: Account's balance after transaction
      type:
        type: string
        description: Type of transaction
      category:
        type: string
        description: Transaction's category
      note:
        type: string
        description: Additional notes5
  EditTransactionBody:
    properties:
        category:
          type: string
          description: user email
        notes:
          type: string
          description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          createdAt:
            type: string
          email:
            type: string
          firstNAme:
            type: string
          id:
            type: string
          lastName:
            type: string
          updatedAt:
            type: string
  LoginResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          token:
            type: string
  AllTransactionsResponse:
    properties:
      status:
        type: number
      message:
        type: string
      body:
        type: array
        items:
          $ref: '#/definitions/Transaction'
  CreateTransactionResponse:
    properties:
      status:
        type: number
      message:
        type: string
      body: 
        $ref: '#/definitions/Transaction'    
  
  
